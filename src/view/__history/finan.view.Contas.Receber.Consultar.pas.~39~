unit finan.view.Contas.Receber.Consultar;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  System.ImageList, Vcl.ImgList, Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.WinXPanels,
  Vcl.ComCtrls;

type
  TfrmConsultarContasReceber = class(TForm)
    Panel1: TPanel;
    pnlPesquisa: TPanel;
    btnPesquisar: TButton;
    ImageList1: TImageList;
    pnlGrid: TPanel;
    DBGrid1: TDBGrid;
    Panel3: TPanel;
    btnFechar: TButton;
    btnBaixar: TButton;
    DataSource1: TDataSource;
    pnlFiltrarTipo: TPanel;
    Panel4: TPanel;
    StackPanel1: TStackPanel;
    Label1: TLabel;
    cbFiltroTipoData: TComboBox;
    pnlDataInicio: TPanel;
    StackPanel2: TStackPanel;
    pnlDataFim: TPanel;
    StackPanel3: TStackPanel;
    Label2: TLabel;
    Label3: TLabel;
    DateFiltroDataInicio: TDateTimePicker;
    DateFiltroDataFim: TDateTimePicker;
    procedure btnPesquisarClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
  private
    { Private declarations }
    FFiltroPesquisa : String;
    procedure LimparFiltro;
    procedure AdicionarFiltro(aValue : String);
    procedure Pesquisar;
    procedure FiltrarData;
  public
    { Public declarations }
  end;

var
  frmConsultarContasReceber: TfrmConsultarContasReceber;

implementation

uses
  finan.Utilitarios, sistema.model.Contas.Receber;

{$R *.dfm}

procedure TfrmConsultarContasReceber.AdicionarFiltro(aValue: String);
begin
  FFiltroPesquisa := FFiltroPesquisa + ' ' + aValue;
end;

procedure TfrmConsultarContasReceber.btnFecharClick(Sender: TObject);
begin
  close;
end;

procedure TfrmConsultarContasReceber.btnPesquisarClick(Sender: TObject);
begin
  Pesquisar;
end;

procedure TfrmConsultarContasReceber.FiltrarData;
var
  CampoData : String;
begin
  if cbFiltroTipoData.ItemIndex = -1 then
    exit;

  if (DateFiltroDataInicio.Checked = False) and (DateFiltroDataFim.Checked = False) then
  begin
    Application.MessageBox('Uma data precisa ser preenchida', 'Atenção', MB_OK + MB_ICONWARNING);
    abort;
  end;

  case cbFiltroTipoData.ItemIndex of
    0 : CampoData := 'DATA_COMPRA';
    1 : CampoData := 'DATA_VENCIMENTO';
    2 : CampoData := 'DATA_PAGAMENTO';
  end;

  if DateFiltroDataInicio.Checked then
  begin
    AdicionarFiltro('AND ' + CampoData + ' >= :DATAINICIO');
    dmContasReceber.cdsContasReceber.Params.CreateParam(TFieldType.ftDate, 'DATAINICIO', TParamType.ptInput);
    dmContasReceber.cdsContasReceber.ParamByName('DATAINICIO').AsDate := DateFiltroDataInicio.Date;
  end;
  
end;

procedure TfrmConsultarContasReceber.LimparFiltro;
begin
  FFiltroPesquisa := '';
end;

procedure TfrmConsultarContasReceber.Pesquisar;
var
  FiltroPesquisa : String;
begin
  LimparFiltro;
  dmContasReceber.cdsContasReceber.Params.Clear;

  FiltrarData;

  dmContasReceber.cdsContasReceber.Close;
  dmContasReceber.cdsContasReceber.CommandText := 'select * from contas_receber where 1=1' + FiltroPesquisa;
  dmContasReceber.cdsContasReceber.Open;
end;

end.
